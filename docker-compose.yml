version: '3.2'

services:
    # nginx:
    #     container_name: nginx
    #     image: nginx:latest
    #     ports:
    #         - 80:80
    #     volumes:
    #         - ./nginx.conf:/etc/nginx/nginx.conf
    #     env_file:
    #         - .docker.env
    #     networks:
    #         - api
    #         - client
    #         - postgres
    #         - redis
    #         - minio
    #     depends_on:
    #         - api
    #         - client

    # client:
    #     container_name: client
    #     build:
    #         dockerfile: ./apps/client/Dockerfile
    #         context: .
    #     volumes:
    #         - ./dist/apps/client:/app
    #     networks:
    #         - client
    #     depends_on:
    #         - api

    # api:
    #     container_name: api
    #     build:
    #         dockerfile: ./apps/api/Dockerfile
    #         context: .
    #     ports:
    #         - 9229:9229
    #     volumes:
    #         - ./dist/apps/api:/app
    #     env_file:
    #         - .env
    #     networks:
    #         - api
    #         - redis
    #         - postgres
    #         - minio
    #     depends_on:
    #         - redis
    #         - mariadb
    #         - minio

    redis:
        container_name: redis
        image: redis:latest
        volumes:
            - redis-data:/data
        env_file:
            - .docker.env
        networks:
            - redis

    redis-commander:
        container_name: redis-commander
        image: rediscommander/redis-commander:latest
        ports:
            - 8081:8081
        env_file:
            - .docker.env
        networks:
            - redis
        depends_on:
            - redis

    postgres:
        container_name: postgres
        image: postgres:latest
        volumes:
            - postgres-data:/var/lib/postgresql/data
        env_file:
            - .docker.env
        networks:
            - postgres

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:latest
        ports:
            - 8080:80
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        env_file:
            - .docker.env
        networks:
            - postgres
        depends_on:
            - postgres

    minio:
        container_name: minio
        image: minio/minio:latest
        command: server --console-address ":9001" /data
        ports:
            - 9000:9000
            - 9001:9001
        volumes:
            - minio-data:/data
        env_file:
            - .docker.env
        networks:
            - minio
        healthcheck:
            test:
                ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
            interval: 30s
            timeout: 20s
            retries: 3

volumes:
    redis-data:
        driver: local
    postgres-data:
        driver: local
    pgadmin-data:
        driver: local
    minio-data:
        driver: local

networks:
    nginx:
        driver: bridge
    client:
        driver: bridge
    api:
        driver: bridge
    redis:
        driver: bridge
    postgres:
        driver: bridge
    minio:
        driver: bridge
